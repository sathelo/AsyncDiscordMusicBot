import discord
from discord.ext.commands.core import command
import youtube_dl
from discord import VoiceClient
from discord.ext import commands
from discord.ext.commands import Context
from youtube_dl.utils import DownloadError


class MusicCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot        
        self.song_list = []
        self.context = None

    async def __playlist(self, ctx: Context = None):
        """ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–ª–µ–π–ª–∏—Å—Ç–∞

        Args:
            ctx (Context): –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞.
        """
        # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å –æ–±–Ω–æ–≤–∏—Ç—å –µ–≥–æ –∏–Ω–∞—á–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–∞—Ä—ã–π
        if not ctx is None:
            self.ctx = ctx

        # –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –Ω–µ—Ç, —Ç–æ –≤—ã—Ö–æ–¥–∏–º
        if self.ctx is None:
            return

        # –ï—Å–ª–∏ –Ω–µ—Ç voice_client, —Ç–æ –≤—ã—Ö–æ–¥–∏–º 
        voice_client: VoiceClient = self.ctx.voice_client
        if not isinstance(voice_client, VoiceClient):
            return


        # TODO: –°–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –∑–∞–ø—É—Å–∫ –º—É–∑—ã–∫–∏ –∏–∑ –æ—á–µ—Ä–µ–¥–∏
        if not voice_client.is_playing() and len(self.song_list):
            url = self.song_list.pop(0)
            voice_client.loop.create_task(self.play(self.ctx, url))


        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤ —Ü–∏–∫–ª —Å–æ–±—ã—Ç–∏–π –µ—â–µ —Ä–∞–∑
        voice_client.loop.create_task(self.__playlist(self.ctx))

    async def __check_access(self, ctx: Context) -> bool:
        """ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–º–∞–Ω–¥–∞–º

        Args:
            ctx (Context): –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞.

        Returns:
            bool: True - –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –≥–æ–ª–æ—Å–æ–≤ —á–∞—Ç–µ
        """
        name = await self.__get_username(ctx)
        if ctx.author.voice:
            return True

        await ctx.send(f"{name} —Ç—ã –Ω–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ ‚Åâ")
        return False

    async def __get_username(self, ctx: Context) -> str:
        """ –ü–æ–ª—É—á–∏—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        Args:
            ctx (Context): –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞.

        Returns:
            str: –î–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –∏—Ö –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–æ –µ—Å–ª–∏ —É –Ω–∏—Ö –µ—Å—Ç—å –ø—Å–µ–≤–¥–æ–Ω–∏–º, —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π –¥–ª—è –≥–∏–ª—å–¥–∏–∏, –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è.
        """
        return ctx.author.display_name

    @commands.command()
    async def join(self, ctx: Context):
        """ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –≤ —á–∞—Ç

        Args:
            ctx (Context): –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞.
        """
        name = await self.__get_username(ctx)
        voice_client: VoiceClient = ctx.voice_client
        if not await self.__check_access(ctx):
            return
        if isinstance(voice_client, VoiceClient) and voice_client.is_connected():
            await ctx.send(f"{name} —è —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω, –≤ –≥–ª–∞–∑–∫–∏ –¥–æ–ª–±–∏—à—å—Å—è ‚Åâ")
            return
        channel = ctx.author.voice.channel
        await channel.connect()

    @commands.command()
    async def disconnect(self, ctx: Context):
        """ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –≤ —á–∞—Ç

        Args:
            ctx (Context): –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞.
        """
        name = await self.__get_username(ctx)
        voice_client: VoiceClient = ctx.voice_client
        if not await self.__check_access(ctx):
            return
        if voice_client is None:
            await ctx.send(f"{name} —è —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω, –≤ –≥–ª–∞–∑–∫–∏ –¥–æ–ª–±–∏—à—å—Å—è ‚Åâ")
            return
        await voice_client.disconnect()

    @commands.command()
    async def play(self, ctx: Context, url: str):
        """ –ó–∞–ø—É—Å–∫ youtube –∫–ª–∏–ø–∞ –ø–æ —Å—Å—ã–ª–∫–µ

        Args:
            ctx (Context): –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞.
            url (str): –°—Å—ã–ª–∫–∞ –Ω–∞ youtube –∫–ª–∏–ø
        """
        name = await self.__get_username(ctx)
        voice_client: VoiceClient = ctx.voice_client
        if not await self.__check_access(ctx):
            return
        if voice_client is None:
            await ctx.send(f'{name} –±—É–¥—å –¥–æ–±—Ä –Ω–∞–ø–∏—à–∏ !join ‚Åâ')
            return
        ctx.voice_client.stop()
        FFMPEG_OPTIONS = {
            'before_options': '-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5', 'options': '-vn'}
        YDL_OPTIONS = {'format': "bestaudio"}
        vc = ctx.voice_client
        try:
            with youtube_dl.YoutubeDL(YDL_OPTIONS) as ydl:
                info = ydl.extract_info(url, download=False)
                url2 = info['formats'][0]['url']
                source = await discord.FFmpegOpusAudio.from_probe(url2, **FFMPEG_OPTIONS)
                vc.play(source)
                await ctx.send('–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç - ' + info.get('title'))
                await self.__playlist(ctx)
        except DownloadError:
            await ctx.send(f'{name} —Ç—ã –Ω–µ –ø–µ—Ä–µ–¥–∞–ª —Å—ã–ª–ª–∫—É ‚Åâ')

    @commands.command()
    async def add_song(self, ctx: Context, url: str):
        """ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ youtube –∫–ª–∏–ø–∞ –≤ –æ—á–µ—Ä–µ–¥—å

        Args:
            ctx (Context): –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞.
            url (str): –°—Å—ã–ª–∫–∞ –Ω–∞ youtube –∫–ª–∏–ø
        """
        name = await self.__get_username(ctx)
        voice_client: VoiceClient = ctx.voice_client
        if not await self.__check_access(ctx):
            return
        if voice_client is None:
            await ctx.send(f'{name} –±—É–¥—å –¥–æ–±—Ä –Ω–∞–ø–∏—à–∏ !join ‚Åâ')
            return
        self.song_list.append(url)

    @commands.command()
    async def pause(self, ctx: Context):
        """ –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å youtube –∫–ª–∏–ø

        Args:
            ctx (Context): –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞.
        """
        name = await self.__get_username(ctx)
        voice_client: VoiceClient = ctx.voice_client
        if not await self.__check_access(ctx):
            return
        if voice_client is None:
            await ctx.send(f'{name} –±—É–¥—å –¥–æ–±—Ä –Ω–∞–ø–∏—à–∏ !join ‚Åâ')
            return
        if not voice_client.is_playing():
            await ctx.send(f"{name} —è —Å–µ–π—á–∞—Å –Ω–µ –∏–≥—Ä–∞—é –º—É–∑—ã–∫—É ‚Åâ")
            return
        voice_client.pause()
        await ctx.send(f"{name} –ø–æ—Å—Ç–∞–≤–∏–ª –ø–∞—É–∑—É ‚è∏")

    @commands.command()
    async def resume(self, ctx: Context):
        """ –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å youtube –∫–ª–∏–ø

        Args:
            ctx (Context): –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞.
        """
        name = await self.__get_username(ctx)
        voice_client: VoiceClient = ctx.voice_client
        if not await self.__check_access(ctx):
            return
        if voice_client is None:
            await ctx.send(f'{name} –±—É–¥—å –¥–æ–±—Ä –Ω–∞–ø–∏—à–∏ !join ‚Åâ')
            return
        if not voice_client.is_paused():
            await ctx.send(f"{name} —Ç—ã —Å–Ω–∞—á–∞–ª–∞ –ø–æ—Å—Ç–∞–≤—å –Ω–∞ –ø–∞—É–∑—É, –∞ –ø–æ—Ç–æ–º –º–µ–Ω—è –≤—ã–∑—ã–≤–∞–π ‚Åâ")
            return
        voice_client.resume()
        await ctx.send(f"{name} –ø—Ä–æ–¥–æ–ª–∂–∏–ª –ø–µ—Å–Ω—é ‚èØ")

    @commands.command()
    async def skip(self, ctx: Context):
        """ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å youtube –∫–ª–∏–ø

        Args:
            ctx (Context): –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞.
        """
        name = await self.__get_username(ctx)
        voice_client: VoiceClient = ctx.voice_client
        if not await self.__check_access(ctx):
            return
        if voice_client is None:
            await ctx.send(f'{name} –±—É–¥—å –¥–æ–±—Ä –Ω–∞–ø–∏—à–∏ !join ‚Åâ')
            return
        if isinstance(voice_client, VoiceClient) and not voice_client.is_playing():
            await ctx.send(f'{name} –ø–µ—Å–µ–Ω –±–æ–ª—å—à–µ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å, –º–æ–∂–µ—Ç —Å–∫–∏–ø–Ω—É—Ç—å —Ç–µ–±—è ‚Åâ')
            return
        voice_client.stop()
        await ctx.send(f"{name} —Å–∫–∏–ø–Ω—É–ª –ø–µ—Å–Ω—é üí®")


def setup(bot):
    bot.add_cog(MusicCog(bot))
